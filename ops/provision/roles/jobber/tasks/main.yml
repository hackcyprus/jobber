---
- name: create owner
  user: "name={{ owner }} state=present"
  when: not local

- name: upload SSH key
  copy: "src=~/.ssh/jobber_rsa dest=~/.ssh/id_rsa mode=0600"
  when: not local

- name: add some .profile convenience
  lineinfile: "dest='/home/{{ owner }}/.profile' line='source {{ root }}/env/bin/activate; cd {{ root }}/jobber'"
  when: local

- name: add project syslog-ng configuration
  template: src=syslog-ng/jobber.conf.j2 dest=/etc/syslog-ng/conf.d/jobber.conf
  sudo: yes
  notify: restart syslog-ng

- name: install postfix
  apt: "package={{ item }} state=installed"
  sudo: yes
  with_items:
    - postfix
    - libsasl2-modules

- name: copy postfix credentials
  template: src=postfix/sasl_passwd.j2 dest=/etc/postfix/sasl_passwd owner=root
  sudo: yes

- name: chmod postfix credentials
  command: chmod 600 /etc/postfix/sasl_passwd
  sudo: yes

- name: postmap postfix credentials
  command: postmap /etc/postfix/sasl_passwd
  sudo: yes

- name: configure postfix
  template: src=postfix/main.cf.j2 dest=/etc/postfix/main.cf
  sudo: yes
  notify: restart postfix

- name: install uwsgi
  pip: name=uwsgi state=present
  sudo: yes

- name: create uwsgi directory
  file: path=/etc/uwsgi state=directory mode=0755
  sudo: yes

- name: configure uwsgi
  template: src=uwsgi/jobber.ini.j2 dest=/etc/uwsgi/jobber.ini

- name: install supervisor
  pip: name=supervisor state=present
  sudo: yes

- name: create supervisor directory
  file: "path=/etc/supervisor/conf.d state=directory mode=0755"
  sudo: yes

- name: create supervisor logging directory
  file: "path=/var/log/supervisor state=directory mode=0755"
  sudo: yes

- name: configure supervisor
  template: src=supervisord/supervisord.conf.j2 dest=/etc/supervisord.conf
  sudo: yes

- name: add project supervisor configuration
  template: src=supervisord/jobber.conf.j2 dest=/etc/supervisor/conf.d/jobber.conf
  sudo: yes
  notify: restart supervisor

- name: install virtualenv
  pip: name=virtualenv state=present
  sudo: yes

- name: create virtualenv directory
  file: "path={{ root }}/env owner={{ owner }} state=directory mode=0755"
  sudo: yes

- name: checkout code
  git: "repo={{ repo }} dest={{ root }}/jobber version={{ branch }}"
  when: not local
  notify: restart supervisor

- name: create data directory
  file: "path={{ root }}/jobber/data owner={{ owner }} state=directory mode=0755"

- name: upload production configuration
  template: "src=production.py.j2 dest={{ root }}/jobber/jobber/conf/local.py"
  when: not local
  notify: restart supervisor

- name: install python dependencies
  pip: "requirements={{ root }}/jobber/requirements.pip virtualenv={{ root }}/env state=present"
  notify: restart supervisor

- name: run migrations
  command: "{{ root }}/env/bin/alembic upgrade head chdir={{ root }}/jobber"
  notify: restart supervisor
